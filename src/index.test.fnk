{describe, it, expect, to_match_snapshot, mock_fn} = import '@fink/jest/test.fnk'

{loader} = import './index.fnk'


mock_callback = mock_fn _

ctx = dict:
  query: ''
  async: mock_fn fn: mock_callback
  resourcePath: './test.fnk'


describe loader, fn:

  it 'compiles fink', fn:
    await loader
      ctx
      'foo = 1234 or spam'

    [[,code]] = mock_callback.mock.calls

    expect
      code
      to_match_snapshot


  it 'compiles with sourcemap', fn:
    await loader
      {...ctx, query: '?{"source_maps": true}'}
      'foo = 1234 or spam'

    [[,, source_map]] = mock_callback.mock.calls

    expect
      source_map
      to_match_snapshot


  it 'handles parsing errors', fn:
    await loader
      ctx
      'foo = ['

    [[err]] = mock_callback.mock.calls

    expect
      err
      to_match_snapshot


  it 'handles compile errors', fn:
    await loader
      ctx
      '123 = foo'

    [[err]] = mock_callback.mock.calls

    expect
      err
      to_match_snapshot

